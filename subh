const fs = require('fs');

// Function to decode a value from a given base to decimal
function decodeValue(base, value) {
    return BigInt(parseInt(value, base));
}

// Function to perform Lagrange interpolation and find the constant term
function lagrangeInterpolation(points) {
    let c = BigInt(0);
    const k = points.length;

    for (let i = 0; i < k; i++) {
        const xi = points[i][0];
        const yi = points[i][1];
        let li = BigInt(1);

        for (let j = 0; j < k; j++) {
            if (i !== j) {
                const xj = points[j][0];
                li *= BigInt(0 - xj) / BigInt(xi - xj);
            }
        }
        c += yi * li;
    }
    return c;
}

// Main function to read JSON input and calculate the constant term
function findConstantTerm(filePath) {
    const data = JSON.parse(fs.readFileSync(filePath, 'utf8'));
    const n = data.keys.n;
    const k = data.keys.k;

    // Decode the points
    const points = [];
    for (let i = 1; i <= n; i++) {
        if (data[i]) {
            const base = parseInt(data[i].base);
            const value = data[i].value;
            const y = decodeValue(base, value);
            points.push([i, y]);
        }
    }

    // Select the first k points for interpolation
    const selectedPoints = points.slice(0, k);

    // Calculate the constant term using Lagrange interpolation
    const constantTerm = lagrangeInterpolation(selectedPoints);

    console.log('Constant term (c):', constantTerm.toString());
}

// Example usage
findConstantTerm('input.json');
